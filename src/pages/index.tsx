import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from "next/router";
import DefaultLayout from "../app/UI/Layout/Default";
import LoginForm from 'src/app/UI/Home/LoginForm/LoginForm';
import { useEffect, useState } from 'react';
import { css } from "@emotion/css";
import axios from "axios";
import ApiUtils from "src/app/Game/Utils/ApiUtils";
import Header from "src/app/UI/Home/Header";
import NetworkManager from "src/app/Game/Managers/NetworkManager";
import { toast } from 'react-toastify';
import Error from "src/app/modules/Error";

interface credentials {
    usernameOrEmail: string;
    password: string; 
}

const Home: NextPage = (props: any) => {
    const router = useRouter(),
        [credentials, setCredentials] = useState({ usernameOrEmail: "", password: "" } as credentials),
        [error, setError] = useState({ enabled: false, message: "" }),
        [submitted, setSubmitted] = useState(false),
        handlers = {
            async onLoginFormSubmit(e: Event) {
                e.preventDefault();
                setSubmitted(true);

                try {
                    const res = await axios.post(ApiUtils.url("/user/login"), { 
                            usernameOrEmail: credentials.usernameOrEmail,
                            password: credentials.password
                        }),
                        networkManager = new NetworkManager();

                    networkManager.auth.storeToken(res.data.token.token);
                    toast.success("Signed In! Redirecting..", { autoClose: 3000 });
                    setTimeout(() => {
                        console.log("yo");
                        router.push("/thoughts")
                    }, 3000);
                } catch (e: any) {
                    const errorCodes = e.response.data;
                    
                    if (errorCodes) {
                        errorCodes.forEach((errorCode: any) => {
                            const error = new Error(errorCode);
                            error.notify();
                        });
                    }

                    setSubmitted(false);
                }   
            }
        },
        styles = {
            main: css`
                padding-bottom : 100px;
            `
        };

    useEffect(() => {
        console.log(props.game);
    }, [props.game]);

    return (
        <DefaultLayout>
            <Head>
                <title>ThoughtApp | See what others are thinking</title>
                <meta 
                    name="description" 
                    content="Generated by create next app" />
                <link 
                    rel="icon" 
                    href="/favicon.ico" />
            </Head>
            <div
                className={styles.main} 
                id="home">
                <Header />
                <main>
                    <div className="container">
                        <LoginForm 
                            {...credentials}
                            error={error}
                            submitted={submitted}
                            onSubmit={(e: Event) => handlers.onLoginFormSubmit(e)}
                            onChange={(data: credentials) => setCredentials({ usernameOrEmail: data.usernameOrEmail, password: data.password })} />
                    </div>
                </main>
            </div>
        </DefaultLayout>
    );
}

export default Home
