import type { NextPage } from 'next'
import Head from 'next/head'
import DefaultLayout from "../app/UI/Layout/Default";
import LoginForm from 'src/app/UI/Home/LoginForm/LoginForm';
import { useEffect, useState } from 'react';

interface credentials {
    usernameOrEmail: string;
    password: string; 
}

const Home: NextPage = () => {
    const [loginInfo, setLoginInfo] = useState({ username: "", email: "", password: "" }),
        [credentials, setCredentials] = useState({ usernameOrEmail: "", password: "" } as credentials),
        handlers = {
            onLoginFormSubmit(e: Event) {
                e.preventDefault();
                console.log(credentials);
            }
        }

    return (
        <DefaultLayout>
            <Head>
                <title>ThoughtApp | See what others are thinking</title>
                <meta 
                    name="description" 
                    content="Generated by create next app" />
                <link 
                    rel="icon" 
                    href="/favicon.ico" />
                <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
            </Head>
            <div id="home">
                <header>
                    <div className="container">
                        <h1>ThoughtApp</h1>
                        <h2>See what others are thinking</h2>
                    </div>
                </header>
                <main>
                    <LoginForm 
                        {...credentials}
                        onSubmit={handlers.onLoginFormSubmit}
                        onChange={(data: credentials) => setCredentials({ usernameOrEmail: data.usernameOrEmail, password: data.password })} />
                </main>

                <div>
                    <form onSubmit={e => alert(JSON.stringify(loginInfo))}>
                        <input 
                            value={loginInfo.username}
                            onChange={e => setLoginInfo({ username: e.target.value, email: loginInfo.email, password: loginInfo.password })}
                            type="username" />
                        <input 
                            value={loginInfo.email}
                            onChange={e => setLoginInfo({ username: loginInfo.username, email: e.target.value, password: loginInfo.password })}
                            type="email" />
                        <input 
                            value={loginInfo.password}
                            onChange={e => setLoginInfo({ username: loginInfo.username, email: loginInfo.email, password: e.target.value })}
                            type="password" />
                        <button type="submit">submit</button>
                    </form>

                    {JSON.stringify(loginInfo)}
                </div>
            </div>
        </DefaultLayout>
    );
}

export default Home
